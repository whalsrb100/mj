# Kickstart file automatically generated by anaconda

#version=DEVEL
install
url --url=http://192.168.56.1/rhel5.7
#nfs --server=172.16.2.1 --dir=/data/iso/rhel5.5
key --skip
lang en_US.UTF-8
keyboard us
xconfig --startxonboot
reboot
network --device eth0 --bootproto dhcp --noipv6
rootpw  --iscrypted $6$r.B78LInRMaFiyB/$n1W.9h6ksS5cjqfxael7mHjIecUeRT6Dcyocyy54QukNp48a8WCPFns8o.FSU0IwT8PQYDJX3KqJdNBLQSZEJ1
firewall --service=ssh
authconfig --enableshadow --passalgo=sha512
selinux --disabled
timezone Asia/Seoul
bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb quiet"
# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work
interactive
#clearpart --initlabel --all
#part /boot --fstype ext3 --size=200 --ondisk=sda --asprimary
#part /usr/local --fstype ext3 --size=2048 --ondisk=sda
#part /usr --fstype ext3 --size=5120 --ondisk=sda
#part /var --fstype ext3 --size=2048 --ondisk=sda
#part / --fstype ext3 --size=5120 --ondisk=sda --asprimary
#part swap --size=1024 --ondisk=sda --asprimary
#part /workspace --fstype ext3 --size=2048 --ondisk=sda --grow
firstboot --disable


%packages
@admin-tools
@base
@core
@development-libs
@development-tools
@dialup
@editors
@ftp-server
@gnome-desktop
@gnome-software-development
@graphical-internet
@java
@java-development
@korean-support
@legacy-network-server
@legacy-software-development
@legacy-software-support
@network-server
@ruby
@system-tools
@text-internet
@x-software-development
@base-x
system-config-kickstart
tunctl
keyutils
openCryptoki
libhbaapi
brltty
dmraid-events-logwatch
libhbalinux
aide
kexec-tools
nfs4-acl-tools
tpm-tools
gnupg2
iscsi-initiator-utils
trousers
bridge-utils
authd
fipscheck
squashfs-tools
star
hardlink
freeipmi
x86info
device-mapper-multipath
hfsutils
fcoe-utils
edac-utils
hesinfo
fuse-libs
convmv
fuse
cpufreq-utils
openswan
sgpio
systemtap-sdt-devel
perl-XML-SAX
pth
perl-XML-Twig
perl-XML-Dumper
perl-TimeDate
perl-libxml-perl
tog-pegasus-devel
perl-Convert-ASN1
libstdc++44-devel
libassuan-devel
perl-XML-NamespaceSupport
perl-DateManip
libksba-devel
fipscheck-devel
sblim-cmpi-dhcp-devel
perl-Crypt-SSLeay
perl-Mozilla-LDAP
pth-devel
log4cpp-devel
perl-LDAP
perl-XML-Grove
libpciaccess-devel
python-imaging
libhbaapi-devel
python-dmidecode
fuse-devel
libksba
perl-Archive-Zip
gsl
gcc44-c++
gcc44-gfortran
pexpect
dejagnu
imake
java-1.6.0-openjdk-devel
gcc-objc
ElectricFence
memtest86+
gcc-gnat
libgfortran44
gcc44
expect
java-1.6.0-openjdk
unifdef
python-docs
nasm
statserial
efax
emacs-nox
emacs
vim-X11
gnuplot-emacs
nedit
xferstats
libgnome-java
gob2
libgtk-java
libglade-java
libgconf-java
bsh-demo
bogl
bogl-bterm
telnet-server
talk-server
rsh-server
bootparamd
rusers-server
tftp-server
rarpd
gtk+
compat-db
openssl097a
qt4
compat-readline43
compat-openldap
compat-slang
openmotif22
vnc
vnc-server
dnsmasq
dhcp
eruby
ruby-ri
tog-pegasus
lsscsi
pinentry
audit
mc
sysstat
iptraf
xorg-x11-xbitmaps
mesa-libGLw-devel
openmotif-devel
icon-naming-utils
mesa-libGLU-devel
icon-slicer
xorg-x11-server-sdk
libXp-devel
xorg-x11-utils
xorg-x11-xdm
xorg-x11-resutils
xorg-x11-xfwp
xorg-x11-xsm
libpciaccess
xorg-x11-server-Xnest
xorg-x11-xfs-utils
xorg-x11-server-Xvfb
e4fsprogs
arptables_jf

%post





########## Post Configure / Security Patch For SKT ##########
NOW=`date +%Y%m%d`
RO=/root/growin/$NOW
mkdir -p $RO

## 2015.07.13
/bin/tar cf /root/growin/etc.tar /etc/

##### Add user (name : suser) #####
/usr/sbin/useradd suser -G wheel
echo "growin" | passwd --stdin suser


##### Arrange Daemon #####
for stop in $(chkconfig --list | awk '{print $1}' | cut -d : -f 1)
do
chkconfig $stop off
done

DAEMON="acpid arptables_jf auditd avahi-daemon crond gpm haldaemon irqbalance kdump lm_sensors messagebus microcode_ctl netfs network ntpd portmap syslog sysstat xinetd telnet vsftpd xfs sshd"

for start in $DAEMON
do
chkconfig $start on
done

# Changing vsftpd banner
/usr/bin/perl -pi -e 's/anonymous_enable=YES/anonymous_enable=NO/g' /etc/vsftpd/vsftpd.conf
/usr/bin/perl -pi -e 's/#ftpd_banner=Welcome to blah FTP service/ftpd_banner=WARNING:Authorized use only/g' /etc/vsftpd/vsftpd.conf


# Changing /etc/issue & /etc/issue.net
/bin/cat << EOF > /etc/issue
 #####################################################################
 #  This system is for the use of authorized users only.             #
 #  Individuals using this computer system without authority, or in  #
 #  excess of their authority, are subject to having all of their    #
 #  activities on this system monitored and recorded by system       #
 #  personnel.                                                       #
 #                                                                   #
 #  In the course of monitoring individuals improperly using this    #
 #  system, or in the course of system maintenance, the activities   #
 #  of authorized users may also be monitored.                       #
 #                                                                   #
 #  Anyone using this system expressly consents to such monitoring   #
 #  and is advised that if such monitoring reveals possible          # 
 #  evidence of criminal activity, system personnel may provide the  #
 #  evidence of such monitoring to law enforcement officials.        #
 #####################################################################
EOF
/bin/cat /etc/issue > /etc/issue.net


##### Editing /etc/profile #####
/usr/bin/perl -pi -e 's/ulimit -S -c 0 > \/dev\/null 2>&1/ulimit -S -c 20480 > \/dev\/null 2>&1/g' /etc/profile


/bin/cat << EOF >> /etc/profile

# Add umask by growin
umask 022
HISTSIZE=5000
HISTTIMEFORMAT='%F %T   '
export HISTSIZE HISTTIMEFORMAT

EOF



##### Add in /etc/security/limits.conf #####
/bin/cat << EOF >> /etc/security/limits.conf

# Add basic parameter by growin
*		soft	nofile		8192
*		hard	nofile		65535
*		soft	nproc		8192
*		soft	core		20480
EOF



##### Setting Kerenl Parameter #####
# Enable kernel sysrq
/usr/bin/perl -pi -e 's/kernel.sysrq = 0/kernel.sysrq = 1/g' /etc/sysctl.conf

# Add Kernel parameter
/bin/cat << EOF >> /etc/sysctl.conf

# Add Basic Kernel parameter by growin
kernel.msgmni = 1024
kernel.sem = 1000 32000 32 512

net.ipv4.tcp_max_syn_backlog = 8192
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 600
net.ipv4.tcp_syn_retries = 2
net.ipv4.tcp_retries2 = 5

net.core.rmem_default = 4194304
net.core.wmem_default = 4194304
net.core.rmem_max = 8388608
net.core.wmem_max = 8388608
net.ipv4.tcp_mem = 8388608 8388608 8388608

EOF


##### modify sysstat #####
/usr/bin/perl -pi -e 's/HISTORY=7/HISTORY=28/g' /etc/sysconfig/sysstat

/usr/bin/perl -pi -e 's/\*\/10/\*\/1/' /etc/cron.d/sysstat

##### Setting Logrotate #####
# Change logrotate
/usr/bin/perl -pi -e 's/rotate 1/rotate 3/g' /etc/logrotate.conf
/usr/bin/perl -pi -e 's/rotate 4/rotate 12/g' /etc/logrotate.conf
/usr/bin/perl -pi -e 's/0664/0600/g' /etc/logrotate.conf

service syslog restart



##### Configure Kerenl Dump #####
/bin/cat << EOF >> /etc/kdump.conf
path /var/crash
core_collector makedumpfile -c
kdump_pre /root/growin/kdump.sh
extra_bins /bin/bash
EOF

/bin/cat << EOF >> /root/growin/kdump.sh
#!/bin/bash
echo "########## kdump pre execute ##########"
mkdir /test
mount /dev/sda1 /test
echo "########## kdump pre execute ##########" >> /test/file.out
date >> /test/file.out
dmesg >> /test/file.out
EOF

/bin/chmod 777 /root/growin/kdump.sh



##### Network Setting #####
# Configure Bonding Module
/bin/cat << EOF >> /etc/modprobe.conf
alias bond0 bonding
alias bond1 bonding
EOF

# Bonding Network Script
/bin/cat << EOF > /etc/sysconfig/network-scripts/ifcfg-bond0
DEVICE=bond0
BOOTPROTO=none
ONBOOT=no
IPADDR=
NETMASK=255.255.255.0
GATEWAY=
BONDING_OPTS="mode=1 miimon=100"
USERCTL=no
EOF

/bin/cat << EOF > /etc/sysconfig/network-scripts/ifcfg-bond1
DEVICE=bond1
BOOTPROTO=none
ONBOOT=no
IPADDR=
NETMASK=255.255.255.0
BONDING_OPTS="mode=1 miimon=100"
USERCTL=no
EOF

##### Additional Network Setting #####
# Add NOZEROCONF
/bin/echo "NOZEROCONF=yes" >> /etc/sysconfig/network

# Cleen DNS Server Config
/bin/cat /dev/null > /etc/resolv.conf

# Setting Telnet Server
/usr/bin/perl -pi -e 's/disable = yes/disable = no/' /etc/xinetd.d/telnet

# Reset NTP
/usr/bin/perl -pi -e 's/^server/#server/g' /etc/ntp.conf

##### ETC #####
# Delete package uucp
/bin/rpm -e uucp

# Disable Firstboot
echo "RUN_FIRSTBOOT=NO" > /etc/sysconfig/firstboot

##########  Apply Security Patch  ##########

### SSH Root Login ###
/bin/cp -f /etc/ssh/sshd_config $RO
perl -pi -e 's/#PermitRootLogin yes/PermitRootLogin no/g' /etc/ssh/sshd_config
perl -pi -e 's/#PermitEmptyPasswords/PermitEmptyPasswords/g' /etc/ssh/sshd_config
echo "AllowGroups wheel" >> /etc/ssh/sshd_config

### User Password fail count /etc/pam.d/system-auth ###
/bin/cp -f /etc/pam.d/system-auth-ac $RO
/bin/cat << EOF > /etc/pam.d/system-auth-ac
#%PAM-1.0
# This file is auto-generated.
# User changes will be destroyed the next time authconfig is run.
auth        required      pam_env.so
auth        required      pam_tally.so onerr=fail deny=10 unlock_time=3600 magic_root
auth        sufficient    pam_unix.so nullok try_first_pass
auth        requisite     pam_succeed_if.so uid >= 500 quiet
auth        required      pam_deny.so

account     required      pam_unix.so
account     required      pam_tally.so
account     sufficient    pam_succeed_if.so uid < 500 quiet
account     required      pam_permit.so

password    requisite     pam_cracklib.so try_first_pass retry=3
password    sufficient    pam_unix.so md5 shadow nullok try_first_pass use_authtok
password    required      pam_deny.so

session     optional      pam_keyinit.so revoke
session     required      pam_limits.so
session     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid
session     required      pam_unix.so
EOF

# Configure su limit: /etc/pam.d/su
/bin/cp -f /etc/pam.d/su $RO
/bin/cat << EOF > /etc/pam.d/su
#%PAM-1.0
auth            sufficient      pam_rootok.so
# Uncomment the following line to implicitly trust users in the "wheel" group.
#auth           sufficient      pam_wheel.so trust use_uid
# Uncomment the following line to require a user to be in the "wheel" group.
auth            required        pam_wheel.so use_uid
auth            include         system-auth
account         sufficient      pam_succeed_if.so uid = 0 use_uid quiet
account         include         system-auth
password        include         system-auth
session         include         system-auth
session         optional        pam_xauth.so
EOF

# Delete "lp, uucp, nuucp" user
if [ `cat /etc/passwd | egrep "lp|uucp|nuucp" | wc -l` -eq 0 ]
then 
	echo "lp|uucp|nuucp User CLEAR!!"
else
	grep -v lp /etc/passwd > $HOME/passwd.1
	grep -v uucp $HOME/passwd.1 > $HOME/passwd.2
	grep -v nuucp $HOME/passwd.2 > $HOME/passwd
	cat $HOME/passwd > /etc/passwd
	rm -f $HOME/passwd*
fi

# Change /etc/login.defs parameter
if [ `cat /etc/login.defs | grep -i "PASS_MIN_LEN"| grep -v "#" | egrep [0-7]| awk '{print $2}'| wc -l` -eq 0 ]
then
	echo "login.defs CLEAR!!"
else
	cat /etc/login.defs | grep -v "PASS_MIN_LEN" | grep -v "PASS_MAX_DAYS" | grep -v "PASS_MIN_DAYS" > $HOME/login.tmp
	echo "" >> $HOME/login.tmp
	echo "# Add passwd rule" >> $HOME/login.tmp
	echo "PASS_MIN_LEN    9" >> $HOME/login.tmp
	echo "PASS_MAX_DAYS  70" >> $HOME/login.tmp
	echo "PASS_MIN_DAYS  7" >> $HOME/login.tmp
	cat $HOME/login.tmp > /etc/login.defs
	rm -f $HOME/login.tmp
fi

# Disable setid & setgid File
FILES="/sbin/dump /usr/bin/lpq-lpd /usr/bin/newgrp /sbin/restore /usr/bin/lpr /usr/sbin/lpc /sbin/unix_chkpwd /usr/bin/lpr-lpd /usr/sbin/lpc-lpd /usr/bin/at /usr/bin/lprm /bin/traceroute /usr/bin/lpq /usr/bin/lprm-lpd"

for check_file in $FILES
  do
    if [ -f $check_file ]
      then
        if [ -g $check_file -o -u $check_file ]
          then
            echo `ls $check_file` > $RO/list.tmp
        fi
        :
    fi
done

if [ -f $RO/list.tmp ]
  then
   chmod 711 /usr/bin/newgrp
   chmod 555 /sbin/unix_chkpwd
   chmod 755 /usr/bin/at
   chmod 755 /bin/traceroute
#for chm in $(cat list.tmp)
# do
#   if [ '/usr/bin/newgrp' -eq $chm ]
#     then
#            chmod 711 $chm
#            echo `ls -al $chm` >> $RO/patch.log
#     fi
#   if [ '/sbin/unix_chkpwd' -eq $chm ]
#     then
#            chmod 555 $chm
#            echo `ls -al $chm` >> $RO/patch.log
#     fi
#   if [ '/usr/bin/at' -eq $chm ]
#     then
#            chmod 755 $chm
#            echo `ls -al $chm` >> $RO/patch.log
#     fi
#   if [ '/bin/traceroute' -eq $chm ]
#     then  
#            chmod 755 $chm
#            echo `ls -al $chm` >> $RO/patch.log
#     fi
#done
echo " ==> 2.3 setid & setgid PATCH OK !!			          " >> $RO/patch.log
  else
echo " ==> 2.3 setid & setgid CLEAR OK !!			          " >> $RO/patch.log
fi

if [ -f $RO/list.tmp ]
  then
    rm -rf $RO/list.tmp >> $RO/patch.log 2>&1
fi

echo "									  " >> $RO/patch.log

echo " # 3.04 statd & lockd process check                                 " >> $RO/patch.log

if [ `ps -ef | egrep "statd|lockd" | egrep -v "grep|rpc|statdaemon|emi|kblockd" | wc -l` -eq 0 ]
   then
echo " ==> 3.04 statd & lockd CLEAR !!                                    " >> $RO/patch.log
   else 
   /etc/init.d/nfs stop
   /etc/init.d/nfslock stop
echo " ==> 3.04 nfs & nfslock stop OK !!			          " >> $RO/patch.log
fi

##### Check session timeout #####
if env | grep -i -E "TMOUT|TIMEOUT"
then
	echo "Already exists"
else
	if grep -i -E "TMOUT|TIMEOUT" /etc/profile
	then
		echo "Already exists"
	else
		echo "TMOUT=3600" >> /etc/profile
		echo "export TMOUT" >> /etc/profile
   fi
fi

# Check vsftpd umask
if [ -f /etc/vsftpd/vsftpd.conf ];then
	if [ `cat /etc/vsftpd/vsftpd.conf | grep -i ".*umask.*077.*" | grep -v "#" | wc -l` -eq 0 ]
	then
		cat /etc/vsftpd/vsftpd.conf | grep -v "local_umask=022" > $HOME/ftp.tmp
		echo "local_umask=077" >> $HOME/ftp.tmp
		cat $HOME/ftp.tmp > /etc/vsftpd/vsftpd.conf
		rm -rf $HOME/ftp.tmp
    	fi
fi

touch /etc/hosts.equiv
touch /root/.rhosts
chmod 000 /etc/hosts.equiv
chmod 000 /root/.rhosts

##########  After OS Booting, Check README File  ##########
touch $RO/AFTER_INSTALL_OS_README
echo "1. Setting Network Bonding Config, IP Setting, Hostname" >> $RO/AFTER_INSTALL_OS_README
echo "2. Setting /etc/hosts File" >> $RO/AFTER_INSTALL_OS_README
echo "3. Setting NTP Client Config file" >> $RO/AFTER_INSTALL_OS_README
echo "4. Checking OS/Secure Configure" >> $RO/AFTER_INSTALL_OS_README
echo "5. Setting Partition /var/crash, LVM Config" >> $RO/AFTER_INSTALL_OS_README
#echo "6. ethtool patch" >> $RO/AFTER_INSTALL_OS_README
#echo "7. e1000e patch" >> $RO/AFTER_INSTALL_OS_README
#echo "8. jdk install" >> $RO/AFTER_INSTALL_OS_README

# yum repository
/bin/cat << EOF > /etc/yum.repos.d/local.repo
[Cluster]
name=Cluster
baseurl=file:///media/Cluster
enabled=1
gpgcheck=0

[ClusterStorage]
name=ClusterStorage
baseurl=file:///media/ClusterStorage
enabled=1
gpgcheck=0

[Server]
name=Server
baseurl=file:///media/Server
enabled=1
gpgcheck=0

[VT]
name=VT
baseurl=file:///media/VT
enabled=1
gpgcheck=0

EOF

## 2015.07.13

## Session timeout
/bin/echo "set autologout=60" >> /etc/csh.login

## su 
/bin/chown root.wheel /bin/su
/bin/chmod 4750 /bin/su

## syslog
/bin/chmod 640 /etc/syslog.conf

## 2015. 07. 17

## umask
echo "umask 022" >> /etc/bashrc
