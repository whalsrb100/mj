# Kickstart file automatically generated by anaconda.

#version=DEVEL
install
nfs --server=172.16.2.1 --dir=/data/iso/rhel6.4
lang en_US.UTF-8
keyboard us
network --onboot no --device eth0 --bootproto dhcp --noipv6
#network --onboot no --device eth0 --bootproto query --noipv6
reboot
rootpw  --iscrypted $6$q/dMm214SL2IV8Rr$C1NgHWB25NAhC2vdbp7pcj0oQSb/4tYVXB3DEw1vRyKJd0yRbR9C745Drmmp0LCX37gMAHIRuO.ha4LzeVO5Z.
firewall --disabled
authconfig --enableshadow --passalgo=sha512
selinux --disabled
timezone Asia/Seoul
bootloader --location=mbr --driveorder=sda --append="crashkernel=auto"

# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work
#interactive

clearpart --initlabel --all

part / --fstype ext4 --size=81920 --ondisk=sda --asprimary
part swap --size=16384 --ondisk=sda --asprimary
part /boot --fstype ext4 --size=2048 --ondisk=sda --asprimary

part /var --fstype ext4 --size=18432 --ondisk=sda
part /workspace --fstype ext4 --size=102400 --ondisk=sda

#part /var/crash --fstype ext4 --size=98304 --ondisk=sda
#part /usr --fstype ext4 --size=61440 --ondisk=sda
#part /home --fstype ext4 --size=102400 --grow --ondisk=sda



#### External Disk LVM partitions ####
#part pv.008017 --ondisk=sdb --grow --size=200
#part pv.008018 --ondisk=sdc --grow --size=200
#part pv.008019 --ondisk=sdd --grow --size=200
#volgroup VG01 --pesize=4096 pv.008017 pv.008018 pv.008019
#logvol /SKTMRF1 --fstype=ext4 --name=SKTMRF1 --vgname=VG01 --size=200 --grow

#part pv.008018 --ondisk=sdc --grow --size=200
#volgroup VG02 --pesize=4096 pv.008018
#logvol /SKTMRF2 --fstype=ext4 --name=SKTMRF2 --vgname=VG02 --size=200 --grow

firstboot --disable

#part /boot --fstype=ext4 --size=2048
#part pv.008002 --grow --size=1

#part / --fstype ext4 --size=100 --grow --ondisk=sda --asprimary

#volgroup VG01 --pesize=4096 pv.008002
#logvol /home --fstype=ext4 --name=home --vgname=VG01 --size=61440
#logvol / --fstype=ext4 --name=root --vgname=VG01 --size=81290
#logvol swap --name=swap --vgname=VG01 --size=16384
#logvol /usr --fstype=ext4 --name=usr --vgname=VG01 --size=10240
#logvol /usr/local --fstype=ext4 --name=local --vgname=VG01 --size=30720
#logvol /var --fstype=ext4 --name=var --vgname=VG01 --size=61440
#logvol /var/crash --fstype=ext4 --name=crash --vgname=VG01 --size=196608
#logvol /var/crash --fstype=ext4 --name=crash --vgname=VG01 --size=98304
#logvol /workspace --fstype=ext4 --name=workspace --vgname=VG01 --size=102400
#logvol /log --fstype=ext4 --name=log --vgname=VG01 --size=10240 --grow





%packages
@additional-devel
@base
@client-mgmt-tools
@compat-libraries
@console-internet
@core
@debugging
@basic-desktop
@desktop-debugging
@desktop-platform-devel
@development
@dial-up
@ftp-server
@hardware-monitoring
@internet-browser
@java-platform
@korean-support
@large-systems
@legacy-unix
@legacy-x
@system-management-messaging-client
@nfs-file-server
@network-file-system-client
@network-tools
@performance
@perl-runtime
@ruby-runtime
@server-platform
@server-platform-devel
@server-policy
@storage-client-multipath
@system-management
@system-management-messaging-server
@x11
@storage-client-iscsi
@general-desktop
@system-management-snmp
httpd-devel
pcre-devel
libcap-devel
libXinerama-devel
openmotif-devel
net-snmp-devel
libgudev1-devel
kdelibs-apidocs
xz-devel
libtopology-devel
freeglut-devel
kdegraphics-devel
libibverbs-devel
libuuid-devel
kdepimlibs-devel
libblkid-devel
papi-devel
libXmu-devel
unique-devel
xorg-x11-proto-devel
gmp-devel
kdepim-devel
sane-backends-devel
perl-Test-Pod
kdemultimedia-devel
startup-notification-devel
libudev-devel
cups-devel
gstreamer-plugins-base-devel
unixODBC-devel
tcl-devel
numactl-devel
libgnomeui-devel
libbonobo-devel
perl-Test-Pod-Coverage
libtiff-devel
junit
SDL-devel
libXau-devel
tcp_wrappers-devel
PyQt4-devel
kdenetwork-devel
kdelibs-devel
libgcrypt-devel
popt-devel
libusb-devel
hunspell-devel
iptables-devel
libdrm-devel
libXrandr-devel
libxslt-devel
kdebase-devel
tk-devel
libnl-devel
libXpm-devel
expat-devel
e2fsprogs-devel
kdebase-workspace-devel
libglade2-devel
libaio-devel
gnutls-devel
kdesdk-devel
fuse-devel
libXaw-devel
libhugetlbfs-devel
pax
python-dmidecode
sgpio
dos2unix
edac-utils
mtools
ftp
glibc-utils
systemtap-client
memtest86+
gdb-gdbserver
lslk
flightrecorder
systemtap-initscript
oprofile-gui
abrt-gui
xrestop
systemtap-grapher
bltk
kdesdk
gnome-common
qt-doc
gtk2-devel-docs
glade3
desktop-file-utils
gnome-devel-docs
systemtap-sdt-devel
mod_dav_svn
ElectricFence
ant
libstdc++-docs
gcc-gnat
expect
dejagnu
perltidy
cmake
imake
babel
kdewebdev
rpmdevtools
compat-gcc-34
systemtap-server
gcc-java
compat-gcc-34-g77
jpackage-utils
bzr
mercurial
chrpath
gcc-objc
rpmlint
gcc-objc++
compat-gcc-34-c++
python-docs
nasm
xferstats
edac-utils
i2c-tools
lm_sensors
telnet-server
telnet
tcp_wrappers
finger
ncompress
ksh
openmotif
libXmu
libXp
python-saslwrapper
ruby-irb
qpid-tests
ruby-qpid-qmf
wireshark
papi
perl-DBD-SQLite
ruby-irb
ipmitool
watchdog
OpenIPMI
lksctp-tools
net-snmp-perl
net-snmp-python
nmap
tuned
tuned-utils
libstdc++.i686
arptables_jf
avahi
gpm
mcelog
%end


%post

########## Post Configure / Security Patch For SKT ##########
NOW=`date +%Y%m%d`
RO=/root/growin/$NOW
mkdir -p $RO


## 2015.07.13
/bin/tar cf /root/growin/etc.tar /etc/


##### Arrange Daemon #####
for stop in $(chkconfig --list | awk '{print $1}' | cut -d : -f 1)
do
chkconfig $stop off
done

DAEMON="acpid arptables_jf auditd avahi-daemon crond gpm haldaemon irqbalance kdump lm_sensors messagebus microcode_ctl netfs network ntpd rpcbind rsyslog sysstat xinetd telnet vsftpd xfs sshd mcelogd"

for start in $DAEMON
do
chkconfig $start on
done



##### Add user (name : suser) #####
/usr/sbin/useradd suser -G wheel
echo "growin" | passwd --stdin suser



##### Editing /etc/profile #####
/usr/bin/perl -pi -e 's/ulimit -S -c 0 > \/dev\/null 2>&1/ulimit -S -c 20480 > \/dev\/null 2>&1/g' /etc/profile


/bin/cat << EOF >> /etc/profile

# Add umask for SKT
umask 022
HISTSIZE=5000
HISTTIMEFORMAT='%F %T   '
export HISTSIZE HISTTIMEFORMAT
EOF



##### Add in /etc/security/limits.conf #####
/bin/cat << EOF >> /etc/security/limits.conf

*		soft	nofile		8192
*		hard	nofile		65535
*		soft	nproc		8192
*		soft	core		20480
EOF

## 2015. 4. 13
/bin/cat << EOF > /etc/security/limits.d/90-nproc.conf
# Default limit for number of user's processes to prevent
# accidental fork bombs.
# See rhbz #432903 for reasoning.

#*          soft    nproc     1024
#root       soft    nproc     unlimited
EOF

### add 2015.02.24
#/usr/bin/perl -pi -e 's/*/#*/' /etc/security/limits.d/90-nproc.conf


##### Setting Kerenl Parameter #####
# Enable kernel sysrq
/usr/bin/perl -pi -e 's/kernel.sysrq = 0/kernel.sysrq = 1/g' /etc/sysctl.conf

# Add Kernel parameter
/bin/cat << EOF >> /etc/sysctl.conf

# Add Kernel parameter for SKT
kernel.msgmni = 1024
kernel.sem = 1000 32000 32 512
kernel.threads-max = 270335

net.ipv4.tcp_max_syn_backlog = 8192
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 600
net.ipv4.tcp_syn_retries = 2
net.ipv4.tcp_retries2 = 5

net.core.rmem_default = 4194304
net.core.wmem_default = 4194304
net.core.rmem_max = 8388608
net.core.wmem_max = 8388608
net.ipv4.tcp_mem = 8388608 8388608 8388608

EOF


##### modify sysstat #####
/usr/bin/perl -pi -e 's/HISTORY=7/HISTORY=28/g' /etc/sysconfig/sysstat

/usr/bin/perl -pi -e 's/\*\/10/\*\/1/' /etc/cron.d/sysstat

##### Setting Logrotate #####
# Change logrotate
/usr/bin/perl -pi -e 's/rotate 1/rotate 3/g' /etc/logrotate.conf
/usr/bin/perl -pi -e 's/rotate 4/rotate 12/g' /etc/logrotate.conf
/usr/bin/perl -pi -e 's/0664/0600/g' /etc/logrotate.conf

service rsyslog restart



##### Configure Kerenl Dump #####
/bin/cat << EOF >> /etc/kdump.conf
kdump_pre /root/growin/kdump.sh
extra_bins /bin/bash
EOF

/bin/cat << EOF >> /root/growin/kdump.sh
#!/bin/bash
echo "########## kdump pre execute ##########"
mkdir /test
mount /dev/sda1 /test
echo "########## kdump pre execute ##########" >> /test/file.out
date >> /test/file.out
dmesg >> /test/file.out
exit 0;
EOF

/bin/chmod 777 /root/growin/kdump.sh



##### Network Setting #####
# Configure Bonding Module
/bin/cat << EOF >> /etc/modprobe.d/bonding.conf
alias bond0 bonding
alias bond1 bonding
EOF

# Bonding Network Script
/bin/cat << EOF > /etc/sysconfig/network-scripts/ifcfg-bond0
DEVICE="bond0"
BOOTPROTO="none"
ONBOOT="no"
IPADDR=""
NETMASK="255.255.255.0"
GATEWAY=""
BONDING_OPTS="mode=1 miimon=100"
USERCTL="no"
EOF

/bin/cat << EOF > /etc/sysconfig/network-scripts/ifcfg-bond1
DEVICE="bond1"
BOOTPROTO="none"
ONBOOT="no"
IPADDR=""
NETMASK="255.255.255.0"
BONDING_OPTS="mode=1 miimon=100"
USERCTL="no"
EOF

# Add Common Rounting Tables for Sungsu
/bin/cat << EOF > /etc/sysconfig/network-scripts/route-bond1
#172.18.96.233 via NET_GATEWAY
#172.18.96.234 via NET_GATEWAY
#70.12.205.159 via NET_GATEWAY
#70.12.231.169 via NET_GATEWAY
#172.18.5.0/24 via NET_GATEWAY
#192.168.240.0/24 via NET_GATEWAY
#172.18.1.20 via NET_GATEWAY
#70.12.202.15 via NET_GATEWAY
#172.18.101.128/25 via NET_GATEWAY
#172.18.83.86 via NET_GATEWAY
EOF



##### Additional Network Setting #####
# Add NOZEROCONF
/bin/echo "NOZEROCONF=yes" >> /etc/sysconfig/network

# Cleen DNS Server Config
/bin/cat /dev/null > /etc/resolv.conf

# Setting Telnet Server
/usr/bin/perl -pi -e 's/disable = yes/disable = no/' /etc/xinetd.d/telnet

# Reset NTP
/usr/bin/perl -pi -e 's/^server/#server/g' /etc/ntp.conf

# Setting Loopback Network
/bin/echo "MTU=1500" >> /etc/sysconfig/network-scripts/ifcfg-lo



##### ETC #####
# Delete package uucp
/bin/rpm -e uucp

# Disable Firstboot
echo "RUN_FIRSTBOOT=NO" > /etc/sysconfig/firstboot



############################################
##########  Apply Security Patch  ##########
############################################



##### Setting Banner File #####

# Changing /etc/issue & /etc/issue.net
/bin/cat << EOF > /etc/issue
 #####################################################################
 #  This system is for the use of authorized users only.             #
 #  Individuals using this computer system without authority, or in  #
 #  excess of their authority, are subject to having all of their    #
 #  activities on this system monitored and recorded by system       #
 #  personnel.                                                       #
 #                                                                   #
 #  In the course of monitoring individuals improperly using this    #
 #  system, or in the course of system maintenance, the activities   #
 #  of authorized users may also be monitored.                       #
 #                                                                   #
 #  Anyone using this system expressly consents to such monitoring   #
 #  and is advised that if such monitoring reveals possible          # 
 #  evidence of criminal activity, system personnel may provide the  #
 #  evidence of such monitoring to law enforcement officials.        #
 #####################################################################
EOF
/bin/cat /etc/issue > /etc/issue.net

# Changing vsftpd banner
/usr/bin/perl -pi -e 's/anonymous_enable=YES/anonymous_enable=NO/g' /etc/vsftpd/vsftpd.conf
/usr/bin/perl -pi -e 's/#ftpd_banner=Welcome to blah FTP service/ftpd_banner=WARNING:Authorized use only/g' /etc/vsftpd/vsftpd.conf

# Delete "lp, uucp, nuucp" user
if [ `cat /etc/passwd | egrep "lp|uucp|nuucp" | wc -l` -eq 0 ]
then 
	echo "lp|uucp|nuucp User CLEAR!!"
else
	grep -v lp /etc/passwd > $HOME/passwd.1
	grep -v uucp $HOME/passwd.1 > $HOME/passwd.2
	grep -v nuucp $HOME/passwd.2 > $HOME/passwd
	cat $HOME/passwd > /etc/passwd
	rm -f $HOME/passwd*
fi

# Change /etc/login.defs parameter
if [ `cat /etc/login.defs | grep -i "PASS_MIN_LEN"| grep -v "#" | egrep [0-7]| awk '{print $2}'| wc -l` -eq 0 ]
then
	echo "login.defs CLEAR!!"
else
	cat /etc/login.defs | grep -v "PASS_MIN_LEN" | grep -v "PASS_MAX_DAYS" | grep -v "PASS_MIN_DAYS" > $HOME/login.tmp
	echo "" >> $HOME/login.tmp
	echo "# Add passwd rule" >> $HOME/login.tmp
	echo "PASS_MIN_LEN    9" >> $HOME/login.tmp
	echo "PASS_MAX_DAYS  70" >> $HOME/login.tmp
	echo "PASS_MIN_DAYS  7" >> $HOME/login.tmp
	cat $HOME/login.tmp > /etc/login.defs
	rm -f $HOME/login.tmp
fi

# Disable setid & setgid File
FILES="/sbin/dump /usr/bin/lpq-lpd /usr/bin/newgrp /sbin/restore /usr/bin/lpr /usr/sbin/lpc /sbin/unix_chkpwd /usr/bin/lpr-lpd /usr/sbin/lpc-lpd /usr/bin/at /usr/bin/lprm /bin/traceroute /usr/bin/lpq /usr/bin/lprm-lpd"

for check_file in $FILES
  do
    if [ -f $check_file ]
      then
        if [ -g $check_file -o -u $check_file ]
          then
            echo `ls $check_file` > $RO/list.tmp
        fi
        :
    fi
done

if [ -f $RO/list.tmp ]
  then
   chmod 711 /usr/bin/newgrp
   chmod 555 /sbin/unix_chkpwd
   chmod 755 /usr/bin/at
   chmod 755 /bin/traceroute
#for chm in $(cat list.tmp)
# do
#   if [ '/usr/bin/newgrp' -eq $chm ]
#     then
#            chmod 711 $chm
#            echo `ls -al $chm` >> $RO/patch.log
#     fi
#   if [ '/sbin/unix_chkpwd' -eq $chm ]
#     then
#            chmod 555 $chm
#            echo `ls -al $chm` >> $RO/patch.log
#     fi
#   if [ '/usr/bin/at' -eq $chm ]
#     then
#            chmod 755 $chm
#            echo `ls -al $chm` >> $RO/patch.log
#     fi
#   if [ '/bin/traceroute' -eq $chm ]
#     then  
#            chmod 755 $chm
#            echo `ls -al $chm` >> $RO/patch.log
#     fi
#done
echo " ==> 2.3 setid & setgid PATCH OK !!			          " >> $RO/patch.log
  else
echo " ==> 2.3 setid & setgid CLEAR OK !!			          " >> $RO/patch.log
fi

if [ -f $RO/list.tmp ]
  then
    rm -rf $RO/list.tmp >> $RO/patch.log 2>&1
fi

echo "									  " >> $RO/patch.log

echo " # 3.04 statd & lockd process check                                 " >> $RO/patch.log

if [ `ps -ef | egrep "statd|lockd" | egrep -v "grep|rpc|statdaemon|emi|kblockd" | wc -l` -eq 0 ]
   then
echo " ==> 3.04 statd & lockd CLEAR !!                                    " >> $RO/patch.log
   else 
   /etc/init.d/nfs stop
   /etc/init.d/nfslock stop
echo " ==> 3.04 nfs & nfslock stop OK !!			          " >> $RO/patch.log
fi

##### Check session timeout #####
if env | grep -i -E "TMOUT|TIMEOUT"
then
	echo "Already exists"
else
	if grep -i -E "TMOUT|TIMEOUT" /etc/profile
	then
		echo "Already exists"
	else
		echo "TMOUT=3600" >> /etc/profile
		echo "export TMOUT" >> /etc/profile
   fi
fi

# Check vsftpd umask
if [ -f /etc/vsftpd/vsftpd.conf ];then
	if [ `cat /etc/vsftpd/vsftpd.conf | grep -i ".*umask.*077.*" | grep -v "#" | wc -l` -eq 0 ]
	then
		cat /etc/vsftpd/vsftpd.conf | grep -v "local_umask=022" > $HOME/ftp.tmp
		echo "local_umask=077" >> $HOME/ftp.tmp
		cat $HOME/ftp.tmp > /etc/vsftpd/vsftpd.conf
		rm -rf $HOME/ftp.tmp
    	fi
fi


### 2013.06.13 add ###

### r command limit add ###
touch /etc/hosts.equiv;
chmod 000 /etc/hosts.equiv;
touch /root/.rhosts;
chmod 000 /root/.rhosts;

### ssh root access limit
perl -pi -e "s/^#PermitRootLogin yes/PermitRootLogin no/" /etc/ssh/sshd_config;
perl -pi -e 's/#PermitEmptyPasswords/PermitEmptyPasswords/g' /etc/ssh/sshd_config
echo "AllowGroups wheel" >> /etc/ssh/sshd_config


### 20130909 add ###
# Configure su limit: /etc/pam.d/su
/bin/cp -f /etc/pam.d/su $RO
/bin/cat << EOF > /etc/pam.d/su
#%PAM-1.0
auth            sufficient      pam_rootok.so
# Uncomment the following line to implicitly trust users in the "wheel" group.
#auth           sufficient      pam_wheel.so trust use_uid
# Uncomment the following line to require a user to be in the "wheel" group.
auth            required        pam_wheel.so use_uid
auth            include         system-auth
account         sufficient      pam_succeed_if.so uid = 0 use_uid quiet
account         include         system-auth
password        include         system-auth
session         include         system-auth
session         optional        pam_xauth.so
EOF

# Configure su limit: /etc/pam.d/su
/bin/cp -f /etc/pam.d/system-auth-ac $RO
/bin/cat << EOF > /etc/pam.d/system-auth-ac
#%PAM-1.0
# This file is auto-generated.
# User changes will be destroyed the next time authconfig is run.
auth        required      pam_env.so
auth        required      pam_tally2.so onerr=fail deny=10 unlock_time=3600 magic_root
auth        sufficient    pam_fprintd.so
auth        sufficient    pam_unix.so nullok try_first_pass
auth        requisite     pam_succeed_if.so uid >= 500 quiet
auth        required      pam_deny.so

account     required      pam_tally2.so
account     required      pam_unix.so
account     sufficient    pam_localuser.so
account     sufficient    pam_succeed_if.so uid < 500 quiet
account     required      pam_permit.so

password    requisite     pam_cracklib.so try_first_pass retry=3 type=
password    sufficient    pam_unix.so sha512 shadow nullok try_first_pass use_authtok
password    required      pam_deny.so

session     optional	  pam_keyinit.so revoke
session     required	  pam_limits.so
session     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid
session     required	  pam_unix.so
EOF


##########  After OS Booting, Check README File  ##########
touch $RO/AFTER_INSTALL_OS_README
echo "1. Setting Network Bonding Config, IP Setting, Hostname" >> $RO/AFTER_INSTALL_OS_README
echo "2. Setting /etc/hosts File" >> $RO/AFTER_INSTALL_OS_README
echo "3. Setting NTP Client Config file" >> $RO/AFTER_INSTALL_OS_README
echo "4. Checking OS/Secure Configure" >> $RO/AFTER_INSTALL_OS_README
echo "5. Setting Partition /var/crash, LVM Config" >> $RO/AFTER_INSTALL_OS_README
echo "6. ethtool patch" >> $RO/AFTER_INSTALL_OS_README
echo "7. e1000e patch" >> $RO/AFTER_INSTALL_OS_README
echo "8. jdk install" >> $RO/AFTER_INSTALL_OS_README 


# yum repository
/bin/cat << EOF > /etc/yum.repos.d/local.repo
[Server]
name=Server
baseurl=file:///media/Server
enabled=1
gpgcheck=0

[LoadBalancer]
name=LoadBalancer
baseurl=file:///media/LoadBalancer
enabled=1
gpgcheck=0

[HighAvailability]
name=HighAvailability
baseurl=file:///media/HighAvailability
enabled=1
gpgcheck=0

[ResilientStorage]
name=ResilientStorage
baseurl=file:///media/ResilientStorage
enabled=1
gpgcheck=0

[ScalableFileSystem]
name=ScalableFileSystem
baseurl=file:///media/ScalableFileSystem
enabled=1
gpgcheck=0

EOF


## 2015.07.13

## Session timeout
/bin/echo "set autologout=60" >> /etc/csh.login

## su 
/bin/chown root.wheel /bin/su
/bin/chmod 4750 /bin/su

## rsyslog
/bin/chmod 640 /etc/rsyslog.conf

## 2015. 07. 17

## umask
echo "umask 022" >> /etc/bashrc
